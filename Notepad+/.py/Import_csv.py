# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'import_csv_form.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QWidget, QFileDialog
import csv


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(501, 404)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("Images/notepad_img.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        Form.setWindowIcon(icon)
        Form.setStyleSheet("border-color: rgb(0, 0, 0);\n"
                           "border-top-color: rgb(0, 0, 0);")
        self.options_box = QtWidgets.QGroupBox(Form)
        self.options_box.setGeometry(QtCore.QRect(30, 10, 451, 161))
        self.options_box.setObjectName("options_box")
        self.gridLayout = QtWidgets.QGridLayout(self.options_box)
        self.gridLayout.setObjectName("gridLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.lbl_file_name = QtWidgets.QLabel(self.options_box)
        self.lbl_file_name.setObjectName("lbl_file_name")
        self.horizontalLayout.addWidget(self.lbl_file_name)
        self.file_name = QtWidgets.QLineEdit(self.options_box)
        self.file_name.setObjectName("file_name")
        self.horizontalLayout.addWidget(self.file_name)
        self.open_directory_btn = QtWidgets.QPushButton(self.options_box)
        self.open_directory_btn.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("Images/open_file.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.open_directory_btn.setIcon(icon1)
        self.open_directory_btn.setObjectName("open_directory_btn")
        self.horizontalLayout.addWidget(self.open_directory_btn)
        self.gridLayout.addLayout(self.horizontalLayout, 0, 0, 1, 1)
        self.import_btn = QtWidgets.QPushButton(Form)
        self.import_btn.setGeometry(QtCore.QRect(390, 200, 90, 20))
        self.import_btn.setObjectName("import_btn")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Импорт"))
        self.options_box.setTitle(_translate("Form", "Опции"))
        self.lbl_file_name.setText(_translate("Form", "Файл источник:"))
        self.import_btn.setText(_translate("Form", "Импортировать"))


class ImportCSV(QWidget, Ui_Form):
    def __init__(self, parent):
        super(ImportCSV, self).__init__()
        self.parent = parent
        self.editor = parent.textEdit
        self.setupUi(self)
        self.setFixedSize(500, 250)
        self.initUI()

    def initUI(self):
        self.open_directory_btn.clicked.connect(self.browse)
        self.import_btn.clicked.connect(self.import_csv)

    def browse(self):
        file_directory = QFileDialog.getOpenFileName(
            self, 'Выберите файл для экспорта', '',
            'CSV (*.csv);;Все файлы (*)')[0]
        self.file_name.setText(file_directory)

    def separators(self):
        self.separators_box.addItems(
            [', (запятая)', '; (точка с запятой)', '\\t (табуляция)', ' (пробел)', 'Произвольный:'])

    def combo_text(self):
        self.curr_sep = self.separators_box.currentText()
        if self.curr_sep == 'Произвольный:':
            self.user_separator.setEnabled(True)
        else:
            self.user_separator.setEnabled(False)

    def import_csv(self):
        try:
            csv_file = self.file_name.text()
            filename = csv_file.split('/')[-1]

            with open(csv_file, mode='r', encoding='utf-8', newline='') as csv_file:
                data = csv_file.read()
                self.editor.setText(data)
            self.parent.filename = filename
            self.parent.filepath = csv_file
            self.parent.setWindowTitle(filename + ' - ' + 'Notepad+')

        except FileNotFoundError:
            self.file_name.setPlaceholderText('Введите название файла')
        except PermissionError:
            self.file_name.setPlaceholderText('Введите название файла')
        except TypeError:
            self.user_separator.setPlaceholderText('Введите разделитель')
        else:
            self.close()
