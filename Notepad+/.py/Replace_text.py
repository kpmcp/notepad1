# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'replace_text_form.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QTextDocument, QTextCursor
from PyQt5.QtWidgets import QWidget, QMessageBox
from Find_text import SearchHighLighter


class Ui_Replace_text_form(object):
    def setupUi(self, Ui_Replace_text_form):
        Ui_Replace_text_form.setObjectName("Ui_Replace_text_form")
        Ui_Replace_text_form.resize(499, 125)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("Images/notepad_img.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        Ui_Replace_text_form.setWindowIcon(icon)
        self.gridLayout_2 = QtWidgets.QGridLayout(Ui_Replace_text_form)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.what_to_replace = QtWidgets.QLineEdit(Ui_Replace_text_form)
        self.what_to_replace.setObjectName("what_to_replace")
        self.gridLayout.addWidget(self.what_to_replace, 0, 1, 1, 1)
        self.than_to_replace = QtWidgets.QLineEdit(Ui_Replace_text_form)
        self.than_to_replace.setObjectName("than_to_replace")
        self.gridLayout.addWidget(self.than_to_replace, 2, 1, 1, 1)
        self.than_to_replace_lbl = QtWidgets.QLabel(Ui_Replace_text_form)
        self.than_to_replace_lbl.setObjectName("than_to_replace_lbl")
        self.gridLayout.addWidget(self.than_to_replace_lbl, 2, 0, 1, 1)
        self.what_to_replace_lbl = QtWidgets.QLabel(Ui_Replace_text_form)
        self.what_to_replace_lbl.setObjectName("what_to_replace_lbl")
        self.gridLayout.addWidget(self.what_to_replace_lbl, 0, 0, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout, 0, 0, 2, 1)
        self.find_btn = QtWidgets.QPushButton(Ui_Replace_text_form)
        self.find_btn.setEnabled(False)
        self.find_btn.setObjectName("find_btn")
        self.gridLayout_2.addWidget(self.find_btn, 0, 1, 1, 1)
        self.replace_btn = QtWidgets.QPushButton(Ui_Replace_text_form)
        self.replace_btn.setEnabled(False)
        self.replace_btn.setObjectName("replace_btn")
        self.gridLayout_2.addWidget(self.replace_btn, 1, 1, 1, 1)
        self.replace_all_btn = QtWidgets.QPushButton(Ui_Replace_text_form)
        self.replace_all_btn.setEnabled(False)
        self.replace_all_btn.setObjectName("replace_all_btn_2")
        self.gridLayout_2.addWidget(self.replace_all_btn, 2, 1, 1, 1)

        self.retranslateUi(Ui_Replace_text_form)
        QtCore.QMetaObject.connectSlotsByName(Ui_Replace_text_form)

    def retranslateUi(self, Ui_Replace_text_form):
        _translate = QtCore.QCoreApplication.translate
        Ui_Replace_text_form.setWindowTitle(_translate("Ui_Replace_text_form", "Заменить"))
        self.than_to_replace_lbl.setText(_translate("Ui_Replace_text_form", "Чем:"))
        self.what_to_replace_lbl.setText(_translate("Ui_Replace_text_form", "Что:"))
        self.find_btn.setText(_translate("Ui_Replace_text_form", "Найти"))
        self.replace_btn.setText(_translate("Ui_Replace_text_form", "Заменить"))
        self.replace_all_btn.setText(_translate("Ui_Replace_text_form", "Заменить всё"))


class ReplaceText(QWidget, Ui_Replace_text_form):
    def __init__(self, parent):
        self.document = parent.textEdit.document()
        self.editor = parent.textEdit
        super(ReplaceText, self).__init__()
        self.searchHighliter = SearchHighLighter(parent.textEdit.document())
        self.setupUi(self)
        self.initUI()

    def initUI(self):
        self.what_to_replace.textChanged.connect(self.textChanged)
        self.than_to_replace.textChanged.connect(self.textChanged)
        self.what_to_replace.setText(self.editor.textCursor().selectedText())
        self.replace_btn.clicked.connect(self.replace_text)
        self.replace_all_btn.clicked.connect(self.replace_all_text)
        self.find_btn.clicked.connect(self.findText)

    def textChanged(self):
        if self.what_to_replace.text() != '':
            self.replace_btn.setEnabled(True)
            self.find_btn.setEnabled(True)
            self.replace_all_btn.setEnabled(True)
        else:
            self.replace_btn.setEnabled(False)
            self.find_btn.setEnabled(False)
            self.replace_all_btn.setEnabled(False)

    def replace_text(self):
        cursor = self.editor.textCursor()
        cursor = self.document.find(self.what_to_replace.text(), cursor, QTextDocument.FindBackward)
        cursor.insertText(self.than_to_replace.text())

    def replace_all_text(self):
        flags = QTextDocument.FindFlags()

        self.editor.textCursor().beginEditBlock()
        cursor = QTextCursor(self.document)
        while not cursor.isNull():
            cursor = self.document.find(self.what_to_replace.text(), cursor, flags)
            cursor.insertText(self.than_to_replace.text())
        self.editor.textCursor().endEditBlock()

    def findText(self):
        if self.editor.find(self.what_to_replace.text().upper(), QTextDocument.FindBackward) is False:
            self.show_information()

    def show_information(self):
        dialog = QMessageBox(self)
        dialog.setWindowTitle('Notepad+')
        dialog.setText('Не удалось найти "{}".'.format(self.what_to_replace.text()))
        dialog.setIcon(QMessageBox.Information)
        dialog.show()
